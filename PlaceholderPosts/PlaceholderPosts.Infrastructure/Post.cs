// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using PlaceholderPosts.Infrastructure;
//
//    var post = Post.FromJson(jsonString);

using System.Globalization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;

namespace PlaceholderPosts.Infrastructure
{
    public partial class Post
    {
        [JsonProperty("userId")] public long UserId { get; set; }

        [JsonProperty("id")] public long Id { get; set; }

        [JsonProperty("title")] public string Title { get; set; }

        [JsonProperty("body")] public string Body { get; set; }
    }

    public partial class Post
    {
        public static Post[] FromJson(string json) =>
            JsonConvert.DeserializeObject<Post[]>(json,
                PlaceholderPosts.Infrastructure.Converter.Settings);
    }

    public static class Serialize
    {
        public static string ToJson(this Post[] self) =>
            JsonConvert.SerializeObject(self,
                PlaceholderPosts.Infrastructure.Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings =
            new JsonSerializerSettings
            {
                MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
                DateParseHandling = DateParseHandling.None,
                Converters =
                {
                    new IsoDateTimeConverter
                    {
                        DateTimeStyles =
                            DateTimeStyles.AssumeUniversal
                    }
                },
            };
    }
}